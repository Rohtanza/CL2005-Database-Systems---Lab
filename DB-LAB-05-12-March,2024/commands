5.1
SELECT DISTINCT EMP_FNAME, EMP_LNAME
FROM employee
WHERE EMP_NUM IN (SELECT EMP_NUM FROM hours WHERE HOUR_RATE > (SELECT AVG(HOUR_RATE) FROM hours));



5.2
SELECT e.EMP_FNAME, e.EMP_LNAME, h.DATE_WORKED,
       (h.HOURS_PER_ATTRACT - avg_hours.AVERAGE) AS DIFFERENCE,
       avg_hours.AVERAGE AS AVERAGE
FROM employee e
JOIN hours h ON e.EMP_NUM = h.EMP_NUM
JOIN (
    SELECT ATTRACT_NO, AVG(HOURS_PER_ATTRACT) AS AVERAGE
    FROM hours
    GROUP BY ATTRACT_NO
) AS avg_hours ON h.ATTRACT_NO = avg_hours.ATTRACT_NO;


5.3:
SELECT TRANSACTION_NO, LINE_NO, LINE_QTY, LINE_PRICE

FROM sales_line SL

WHERE SL.LINE_QTY > (SELECT AVG(LINE_QTY)
FROM sales_line  SA
WHERE SA. TRANSACTION_NO = SL. TRANSACTION_NO);

SELECT PARK_CODE, PARK_NAME, PARK_COUNTRY
FROM themepark
WHERE EXISTS (SELECT PARK_CODE FROM sales
WHERE sales.PARK_CODE = themepark.PARK_CODE);



5.4

SELECT t.PARK_CODE, t.PARK_NAME, t.PARK_COUNTRY
FROM themepark t
LEFT JOIN (
    SELECT PARK_CODE
    FROM sales
    WHERE SALE_DATE >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) -- Adjust the time frame as needed
) s ON t.PARK_CODE = s.PARK_CODE
WHERE s.PARK_CODE IS NULL;

5.5

SELECT ATTRACT_NO, ATTRACT_CAPACITY
FROM attraction
WHERE ATTRACT_CAPACITY <= (
    SELECT AVG(ATTRACT_CAPACITY)
    FROM attraction
);

