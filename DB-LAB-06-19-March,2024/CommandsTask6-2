CREATE VIEW EMPFR AS
SELECT *
FROM employee
WHERE PARK_CODE = 'FR1001'
WITH CHECK OPTION;


-- E6.1
UPDATE EMPFR
SET PARK_CODE = 'NewParkCode'
WHERE EMP_NUM = (SELECT PARK_CODE FROM employee WHERE EMP_NUM = 102);

# as the view is created using the check option so it will give error (ERROR 1443 (HY000): The definition of table 'EMPFR' prevents operation UPDATE on table 'EMPFR')
# so use this command to change it
# UPDATE employee
# SET PARK_CODE = 'NewPark'
# WHERE EMP_NUM = 102 AND PARK_CODE = 'FR1001';


-- E6.2
UPDATE EMPFR
SET EMP_PHONE = '324-9652'
WHERE EMP_NUM = 100;

SELECT * FROM EMPFR;

DROP VIEW EMPFR;



-- E6.3
DROP VIEW IF EXISTS THEME_PARK_SALES;
CREATE VIEW THEME_PARK_SALES AS
SELECT DISTINCT t.PARK_CODE, p.PARK_NAME
FROM ticket t
JOIN themepark p ON t.PARK_CODE = p.PARK_CODE;



SELECT * FROM THEME_PARK_SALES;

-- E6.4
DROP VIEW IF EXISTS EMP_DETAILS;
CREATE VIEW EMP_DETAILS AS
SELECT e.EMP_NUM, e.PARK_CODE, t.PARK_NAME, e.EMP_LNAME, e.EMP_FNAME, e.EMP_HIRE_DATE, e.EMP_DOB
FROM employee e
JOIN themepark t ON e.PARK_CODE = t.PARK_CODE;

SELECT * FROM EMP_DETAILS;


-- E6.5
SELECT EMP_LNAME, EMP_FNAME, PARK_NAME
FROM EMP_DETAILS;

-- E6.6
DROP VIEW IF EXISTS TICKET_SALES;
CREATE VIEW TICKET_SALES AS
SELECT t.PARK_CODE, p.PARK_NAME, MIN(s.LINE_PRICE) AS MinSale, MAX(s.LINE_PRICE) AS MaxSale, AVG(s.LINE_PRICE) AS AvgSale
FROM sales_line s
JOIN ticket t ON s.TICKET_NO = t.TICKET_NO
JOIN themepark p ON t.PARK_CODE = p.PARK_CODE
GROUP BY t.PARK_CODE, p.PARK_NAME;


SELECT * FROM TICKET_SALES;

-- E6.7
SELECT DATE_FORMAT(SALE_DATE, '%a – %d – %c – %y') AS formatted_date
FROM sales;

-- E6.8
SELECT CONCAT(MONTH(EMP_DOB), DAY(EMP_DOB), UPPER(SUBSTRING(EMP_LNAME, 1, 6))) AS USER_ID, EMP_FNAME, EMP_LNAME
FROM employee;

-- E6.9
SELECT EMP_FNAME, EMP_LNAME, EMP_DOB
FROM employee
WHERE DAY(EMP_DOB) = 14;

-- E6.10
SELECT CONCAT(SUBSTRING(EMP_PHONE, 1, 3), LOWER(SUBSTRING(EMP_FNAME, 1, 2))) AS USER_PASSWORD
FROM employee;
